<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    
    <servlet>
        <servlet-name>myweb</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--dispathcerxxx其实是一个servlet 而且还能创建容器对象
        和spring一样 spring中有一个容器 这个mvc中也有容器 就是通过dispatherxxxx来创建的
        所以我们希望在服务器启动的时候dispatcherxxx这个对象就创建出来
        创建出来之后放入到ServletContext中 我们就可以使用这个容器对象了-->

        <init-param><!--去这个路径下读取配置文件-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
            <!--从resource下面开始算起-->
        </init-param>

        <load-on-startup>1</load-on-startup>    <!--启动后创建对象的顺序-->
    </servlet>
    
    <servlet-mapping>
        <servlet-name>myweb</servlet-name>
        <url-pattern>*.do</url-pattern>
        <!--只要是以 *.do 结尾的 都交给这个servlet来处理
        例如 : http://localhost:8080/myweb/some.do-->
    </servlet-mapping>
    
    
    
    
</web-app>