<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <mvc:annotation-driven/>    <!--注解驱动 做ajax需要(@ResponseBody) 某些情况下访问静态资源也需要
                                    配合 <mvc:resources mapping="/static/**" location="/static/"/>使用
                                    webapp下创建一个static包 里面放入图片 网页等等 是我们的常用做法-->

    <context:component-scan base-package="org.example.controller"/>    <!--有了这个(@Controller)才能让类创建对象,
                                                                                                    里面的url和函数绑定处理业务(@RequestMapping)-->


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">    <!--视图解析器 配置资源动态网页 （因为WEB-INF下的文件不能直接访问）-->
        <property name="prefix" value="/admin/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--文件上传核心组件 用户在页面中上传文件的时候需要用到这个-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    </bean>

</beans>